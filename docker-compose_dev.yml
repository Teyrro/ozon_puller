

services:
  db:
    build: backend/compose/multiple_databases_image
    restart: always
    env_file: .env
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD?Variable not set}
      - POSTGRES_USER=${DATABASE_USER?Variable not set}
      - POSTGRES_DB=${DATABASE_NAME?Variable not set}
    ports:
      - "${DATABASE_PORT}:5432"
    expose:
      - "${DATABASE_PORT}"

  redis_server:
    image: redis:alpine
    container_name: redis_server
    restart: always
    env_file: .env
    ports:
      - ${REDIS_PORT}:6379
    expose:
      - ${REDIS_PORT}

  celery_worker:
    container_name: celery_worker
    restart: always
    env_file: .env
    # platform: linux/arm64/v8
    build:
      context: .
      dockerfile: backend/compose/backend/Dockerfile
    command: ./init_celery.sh
#    volumes:
#      - .:/app
    environment:
      - DATABASE_HOST=db
    depends_on:
      - db
      - redis_server

  celery_beat: #Good for crontab and schedule tasks
    container_name: celery_beat
    restart: always
    env_file: .env
    # platform: linux/arm64/v8
    build:
      context: .
      dockerfile: backend/compose/backend/Dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
    command: ./init_celery_beat.sh
#    volumes:
#      - .:/app
    environment:
      - DATABASE_HOST=db
    depends_on:
      - db
      - redis_server


volumes:
  app-db-data:

