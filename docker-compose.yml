volumes:
  app-db-data:

services:
  db:
    build: ./compose/multiple_databases_image
    restart: always
#    volumes:
#      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
#      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD?Variable not set}
      - POSTGRES_USER=${DATABASE_USER?Variable not set}
      - POSTGRES_DB=${DATABASE_NAME?Variable not set}
    ports:
      - "${DATABASE_PORT}:5432"
    expose:
      - "${DATABASE_PORT}"

  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    restart: always
    links:
      - "db:database"
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - POSTGRES_SERVER={DATABASE_HOST}
      - POSTGRES_PORT=${DATABASE_PORT}
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER?Variable not set}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD?Variable not set}
    ports:
      - ${PORT}
    expose:
      - ${PORT}
    build:
      context: .
      dockerfile: ./compose/backend/Dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}

  redis_server:
    image: redis:alpine
    container_name: redis_server
    restart: always
    expose:
      - 6379
    env_file: .env

  celery_worker:
    container_name: celery_worker
    restart: always
    # platform: linux/arm64/v8
    build: .
    command: "watchfiles 'celery -A app.core.celery worker -l info' "
    volumes:
      - .:/app
    depends_on:
      - db
      - redis_server
    env_file: .env

  celery_beat: #Good for crontab and schedule tasks
    container_name: celery_beat
    restart: always
    # platform: linux/arm64/v8
    build:
      context: .
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
    command: celery -A app.core.celery beat -l info -S sqlalchemy_celery_beat.schedulers:DatabaseScheduler -l info
    volumes:
      - .:/app
    depends_on:
      - db
      - redis_server
    env_file: .env


