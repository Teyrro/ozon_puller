[tool.poetry]
name = "ozonpuller"
version = "0.1.0"
description = ""
authors = ["Teyrro <2vvoropaevv2@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
fastapi = {extras = ["all"], version = "^0.111.0"}
python-multipart = "^0.0.9"
passlib = "^1.7.4"
bcrypt = "4.0.1"
envparse = "^0.2.0"
python-jose = "^3.3.0"
asyncpg = "^0.29.0"
httpx = "^0.27.0"
logger = "^1.4"
alembic = "^1.13.1"
pydantic-settings = "^2.2.1"
aiohttp = "^3.9.5"
sqlmodel = {extras = ["standart"], version = "^0.0.18"}
logging = "^0.4.9.6"
tenacity = "^8.3.0"
psycopg2-binary = "^2.9.9"
sqlalchemy-utils = "^0.41.2"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.30"}
uuid7 = "^0.1.0"
pydantic = "^2.7.1"
fastapi-pagination = "^0.12.24"
coverage = "^7.5.1"
fernet = "^1.0.1"
polars = "^0.20.28"
xlsx2csv = "^0.8.2"
xlsxwriter = "^3.2.0"
pyarrow = "^16.1.0"
fastapi-async-sqlalchemy = "^0.6.1"
celery = {extras = ["redis"], version = "^5.4.0"}
redis = "^5.0.4"
sqlalchemy-celery-beat = "^0.7.1"
pyjwt = "^2.8.0"



[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.0"
ruff = "^0.4.1"
pytest = "^8.1.1"
pytest-asyncio = "^0.23.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
    "E712",
    "E402",
    "ARG001",
    "UP007"
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true


